<Activity mc:Ignorable="sap sap2010" x:Class="EscrituraPrecios" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_excelPath" Type="InArgument(x:String)" />
    <x:Property Name="in_dbConnection" Type="InArgument(ui:DatabaseConnection)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>EscrituraPrecios_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.Excel.Activities.Windows.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Database.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="EscrituraPrecios" sap:VirtualizedContainerService.HintSize="1690,3405" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="urlDia" />
      <Variable x:TypeArguments="x:String" Name="urlECI" />
      <Variable x:TypeArguments="x:String" Name="urlCarrefour" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign DisplayName="Asignamos las urls de los supermercados de los que vamos a obtener el precio" sap:VirtualizedContainerService.HintSize="672,210" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[urlDia]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">https://www.dia.es/</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[urlECI]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">https://www.elcorteingles.es/supermercado/</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[urlCarrefour]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">https://www.carrefour.es/supermercado</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="672,3172" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="638,3062" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Utilice el archivo de Excel" sap:VirtualizedContainerService.HintSize="604,3002" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" SensitivityOperation="None" WorkbookPath="[in_excelPath]">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Hacer" sap:VirtualizedContainerService.HintSize="570,2710" sap2010:WorkflowViewState.IdRef="Sequence_11">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:ExcelForEachRowX DisplayName="Para cada fila de Excel" EmptyRowBehavior="Stop" HasHeaders="True" sap:VirtualizedContainerService.HintSize="536,2650" sap2010:WorkflowViewState.IdRef="ExcelForEachRowX_1" Range="[Excel.Sheet(&quot;ReferenciaStock&quot;)]" SaveAfterEachRow="False">
                      <ueab:ExcelForEachRowX.Body>
                        <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                          <ActivityAction.Argument1>
                            <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                          </ActivityAction.Argument1>
                          <ActivityAction.Argument2>
                            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                          </ActivityAction.Argument2>
                          <Sequence DisplayName="Hacer" sap:VirtualizedContainerService.HintSize="502,2437" sap2010:WorkflowViewState.IdRef="Sequence_9">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="priceECI" />
                              <Variable x:TypeArguments="x:String" Name="priceCarrefour" />
                              <Variable x:TypeArguments="x:Int32" Name="cantDistinctPrices" />
                              <Variable x:TypeArguments="x:String" Name="priceDia" />
                              <Variable x:TypeArguments="x:String" Name="insertData" />
                              <Variable x:TypeArguments="x:String" Name="barcode" />
                              <Variable x:TypeArguments="x:Double" Name="price" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Inicializamos una variable para ver en cuantos supermercados está el producto" sap:VirtualizedContainerService.HintSize="468,114" sap2010:WorkflowViewState.IdRef="Assign_9">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[cantDistinctPrices]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">0</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Obtenemos la referencia para buscar el producto" sap:VirtualizedContainerService.HintSize="468,114" sap2010:WorkflowViewState.IdRef="Assign_10">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[barcode]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[currentRow.item("Referencia")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Scraping de precios en el supermercado Dia" sap:VirtualizedContainerService.HintSize="468,204" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Scraping Price AND Storage Data\Calculate Price\Scraping Dia\scrapingDia.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_barcode">[barcode]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_priceDia">[priceDia]</OutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_urlDia">[urlDia]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Scraping de precios en el Corte Inglés" sap:VirtualizedContainerService.HintSize="468,204" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Scraping Price AND Storage Data\Calculate Price\Scraping ECI\ECI.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_urlECI">[UrlECI]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_barcode">[barcode]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_priceECI">[priceECI]</OutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Scraping de precios en el Carrefour" sap:VirtualizedContainerService.HintSize="468,204" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Scraping Price AND Storage Data\Calculate Price\Scraping Carrefour\ScrapingDataCarrefour.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_priceCarrefour">[priceCarrefour]</OutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_barcode">[barcode]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_urlCarrefour">[urlCarrefour]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="validamos en cuantos supermercados ha aparecido la referencia" sap:VirtualizedContainerService.HintSize="468,204" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Scraping Price AND Storage Data\Calculate Price\Validate Price\validate.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_priceDia">[priceDia]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_priceECI">[priceECI]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_priceCarrefour">[priceCarrefour]</InArgument>
                                <OutArgument x:TypeArguments="x:Int32" x:Key="out_cantDistinctPrices">[cantDistinctPrices]</OutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <WriteLine DisplayName="Vemos la cantidad de supermercados que tienen el producto referenciado" sap:VirtualizedContainerService.HintSize="468,122" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;Cantidad: &quot; + cantDistinctPrices.ToString]" />
                            <Assign DisplayName="Redondeamos a dos decimales el precio porque no existen milicentimos" sap:VirtualizedContainerService.HintSize="468,114" sap2010:WorkflowViewState.IdRef="Assign_11">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Double">[price]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Double">[Math.Round((Double.Parse(priceDia.Replace(",", ".")) + Double.Parse(priceECI.Replace(",", ".")) + Double.Parse(priceCarrefour.Replace(",", ".")))/cantDistinctPrices, 2)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ueab:WriteCellX sap2010:Annotation.AnnotationText="Escribir precio en nuestra hoja de referencias" AutoIncrementRow="True" Cell="[CurrentRow.ByField(&quot;Precios&quot;)]" DisplayName="Escribimos los precios de los productos" sap:VirtualizedContainerService.HintSize="468,222" sap2010:WorkflowViewState.IdRef="WriteCellX_8" Value="[price]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ueab:WriteCellX>
                            <Assign DisplayName="Sentencia para insertar el producto en la base de datos" sap:VirtualizedContainerService.HintSize="468,115" sap2010:WorkflowViewState.IdRef="Assign_12">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[insertData]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String" xml:space="preserve">["insert into productos  values (" +
	CurrentRow.item("Referencia").ToString + ", '" + 
	CurrentRow.item("Producto").ToString + "', " +
	CurrentRow.item("Stock").ToString + ", '" +
	CurrentRow.item("Tipo de producto").ToString + "', " + 
	CurrentRow.item("Precios").ToString +");"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Ejecutamos la sentencia de inserción" ExistingDbConnection="[in_dbConnection]" sap:VirtualizedContainerService.HintSize="468,146" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_2" Sql="[insertData]">
                              <ui:ExecuteNonQuery.Parameters>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:ExecuteNonQuery.Parameters>
                            </ui:ExecuteNonQuery>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="468,173" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Fila insertada correctamente&quot;]" />
                            <Sequence DisplayName="Hacer" sap:VirtualizedContainerService.HintSize="468,441" sap2010:WorkflowViewState.IdRef="Sequence_12">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap2010:Annotation.AnnotationText="Calcular precio proveedor" DisplayName="Asignamos el precio del producto al proveedor" sap:VirtualizedContainerService.HintSize="434,145" sap2010:WorkflowViewState.IdRef="Assign_13">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Double">[price]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Double">[price*0.6]</InArgument>
                                </Assign.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Assign>
                              <ueab:WriteCellX sap2010:Annotation.AnnotationText="Escribir precio en hoja de proveedor" AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Distribuidor&quot;).Cell(&quot;D2&quot;)]" DisplayName="Escribimos el precio que tiene el proveedor para el producto" sap:VirtualizedContainerService.HintSize="434,213" sap2010:WorkflowViewState.IdRef="WriteCellX_9" Value="[price]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ueab:WriteCellX>
                            </Sequence>
                          </Sequence>
                        </ActivityAction>
                      </ueab:ExcelForEachRowX.Body>
                    </ueab:ExcelForEachRowX>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
            </ueab:ExcelApplicationCard>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
    </ueab:ExcelProcessScopeX>
  </Sequence>
</Activity>