<Activity mc:Ignorable="sap sap2010" x:Class="validate_stock" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_barcode" Type="InArgument(x:String)" />
    <x:Property Name="in_quantity" Type="InArgument(x:Int32)" />
    <x:Property Name="in_stock" Type="InArgument(x:Int32)" />
    <x:Property Name="in_dbConnection" Type="InArgument(ui:DatabaseConnection)" />
    <x:Property Name="io_amount" Type="InOutArgument(x:Double)" />
    <x:Property Name="io_cumulativeOrder" Type="InOutArgument(x:String)" />
    <x:Property Name="io_cumulativeLack" Type="InOutArgument(x:String)" />
    <x:Property Name="io_cumulativeZero" Type="InOutArgument(x:String)" />
    <x:Property Name="io_cumulativeOrderHtml" Type="InOutArgument(x:String)" />
    <x:Property Name="io_cumulativeLackHtml" Type="InOutArgument(x:String)" />
    <x:Property Name="io_cumulativeZeroHtml" Type="InOutArgument(x:String)" />
    <x:Property Name="io_dailySaleAmount" Type="InOutArgument(x:Double)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>validate_stock_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Numerics</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="validate_stock" sap:VirtualizedContainerService.HintSize="1690,2223" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="selectPrice" />
      <Variable x:TypeArguments="x:String" Name="updateRow" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <If Condition="[in_stock &gt;= in_quantity]" DisplayName="Si stock &gt; cantidad que pide el cliente" sap:VirtualizedContainerService.HintSize="619,2200" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="513,794" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Double" Name="unitPrice" />
            <Variable x:TypeArguments="sd:DataTable" Name="priceTable" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MultipleAssign DisplayName="Asignamos las sentencias para sacar el precio y actualizar el stock del producto" sap:VirtualizedContainerService.HintSize="479,179" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[selectPrice]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">["SELECT precio FROM productos WHERE referencia=" + in_barcode + ";"]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[updateRow]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">["UPDATE productos SET stock=" + (in_stock - in_quantity).ToString + " WHERE referencia=" + in_barcode + ";"]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
          <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Ejecutamos la sentencia de actualización" ExistingDbConnection="[in_dbConnection]" sap:VirtualizedContainerService.HintSize="479,146" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_1" Sql="[updateRow]">
            <ui:ExecuteNonQuery.Parameters>
              <scg:Dictionary x:TypeArguments="x:String, Argument" />
            </ui:ExecuteNonQuery.Parameters>
          </ui:ExecuteNonQuery>
          <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DataTable="[priceTable]" DisplayName="Ejecutamos la consulta del precio de cada producto" ExistingDbConnection="[in_dbConnection]" sap:VirtualizedContainerService.HintSize="479,146" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="[selectPrice]">
            <ui:ExecuteQuery.Parameters>
              <scg:Dictionary x:TypeArguments="x:String, Argument" />
            </ui:ExecuteQuery.Parameters>
          </ui:ExecuteQuery>
          <ui:MultipleAssign DisplayName="Actualizamos el valor de las variables para posteriormente formar la factura" sap:VirtualizedContainerService.HintSize="479,263" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Double">[unitPrice]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Double">[Double.Parse(priceTable.Rows(0)(0).ToString)]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Double">[io_amount]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Double">[io_amount + Math.Round(unitPrice*in_quantity,2)]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[io_cumulativeOrder]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[io_cumulativeOrder + "- Referencia: " + in_barcode  + ". Cantidad del producto: " + in_quantity.ToString + " uds. Importe: " + (Math.Round(unitPrice*in_quantity,2)).ToString + " €.
"]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[io_cumulativeOrderHtml]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[io_cumulativeOrderHtml +  "&lt;li&gt;Referencia: &lt;b&gt;" + in_barcode  + "&lt;/b&gt;. Cantidad del producto: &lt;b&gt;" + in_quantity.ToString + " uds&lt;/b&gt;. Importe: &lt;b&gt;" + (Math.Round(unitPrice*in_quantity,2)).ToString + " €.&lt;/b&gt;&lt;/li&gt;"]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Double">[io_dailySaleAmount]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Double">[io_dailySaleAmount + Math.Round(unitPrice*in_quantity,2)]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="585,1245" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[in_stock &gt; 0]" DisplayName="En caso de que el stock sea menor que la cantidad demandada, ver si hay alguna unidad del producto en stock" sap:VirtualizedContainerService.HintSize="551,1185" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="513,794" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="selectPrice" />
                  <Variable x:TypeArguments="x:String" Name="updateRow" />
                  <Variable x:TypeArguments="sd:DataTable" Name="priceTable" />
                  <Variable x:TypeArguments="x:Double" Name="unitPrice" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:MultipleAssign DisplayName="De nuevo, sentencias de actualización y consulta de precio" sap:VirtualizedContainerService.HintSize="479,179" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[selectPrice]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">["SELECT precio FROM productos WHERE referencia=" + in_barcode + ";"]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[updateRow]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">["UPDATE productos SET stock=0 WHERE referencia=" + in_barcode + ";"]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                </ui:MultipleAssign>
                <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Actualizamos filas en la BBDD" ExistingDbConnection="[in_dbConnection]" sap:VirtualizedContainerService.HintSize="479,146" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_2" Sql="[updateRow]">
                  <ui:ExecuteNonQuery.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:ExecuteNonQuery.Parameters>
                </ui:ExecuteNonQuery>
                <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DataTable="[priceTable]" DisplayName="Seleccionamos rango de precio" ExistingDbConnection="[in_dbConnection]" sap:VirtualizedContainerService.HintSize="479,146" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" Sql="[selectPrice]">
                  <ui:ExecuteQuery.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:ExecuteQuery.Parameters>
                </ui:ExecuteQuery>
                <ui:MultipleAssign DisplayName="Actualizamos el valor de las variables para posteriormente formar la factura" sap:VirtualizedContainerService.HintSize="479,263" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Double">[unitPrice]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Double">[Double.Parse(priceTable.Rows(0)(0).ToString)]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Double">[io_amount]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Double">[io_amount + Math.Round(unitPrice*in_stock,2)]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[io_cumulativeLack]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String" xml:space="preserve">[io_cumulativeLack + "- Referencia: " + in_barcode  + ".  Cantidad del producto:  En lugar de " + in_quantity.ToString + "uds, son " + in_stock.ToString + " uds. Importe: " + Math.Round(unitPrice*in_stock,2).ToString + " €.
"]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[io_cumulativeLackHtml]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String" xml:space="preserve">[io_cumulativeLackHtml + "&lt;li&gt; Referencia: &lt;b&gt;" + in_barcode  + "&lt;/b&gt;.  Cantidad del producto:  En lugar de " + in_quantity.ToString + "uds, son &lt;b&gt;" + in_stock.ToString + " uds&lt;/b&gt;. Importe: &lt;b&gt;" + Math.Round(unitPrice*in_stock,2).ToString + " €&lt;/b&gt;.&lt;/li&gt;"]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Double">[io_dailySaleAmount]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Double">[io_dailySaleAmount + Math.Round(unitPrice*in_stock,2)]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                </ui:MultipleAssign>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Else - En este caso, no hay ninguna unidad del producto que estamos viendo" sap:VirtualizedContainerService.HintSize="513,230" sap2010:WorkflowViewState.IdRef="Sequence_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:MultipleAssign DisplayName="Actualizamos el valor de las variables para posteriormente formar la factura" sap:VirtualizedContainerService.HintSize="479,170" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[io_cumulativeZero]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[io_cumulativeZero + in_barcode.ToString + " / "]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[io_cumulativeZeroHtml]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[io_cumulativeZeroHtml + "&lt;li&gt;&lt;b&gt;"+ in_barcode.ToString + "&lt;/b&gt;&lt;/li&gt;"]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                </ui:MultipleAssign>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>